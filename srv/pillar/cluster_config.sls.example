cluster-host: kubernetes
public-domain: example.com

controlPlaneInterface: wg0

harpoxy:
  enabled: false

envoy:
  enabled: true

kubeadm:
  kubernetesVersion: 1.20.4
  # kubeadm token generate
  token: ockpvc.dsmk8rtibt1gr72y
  nodeToken: 4bidtp.y7q8hlsvfro0ech1
  # kubeadm alpha certs certificate-key
  certificateKey: 127a3baac30e6891987e6e20774da9f3334500c1e61cc688604513c116ce1831

  networking:
    serviceSubnet: "10.96.0.0/12"
    podSubnet: "10.244.0.0/16"

kubernetes:
  common:
    cri:
      provider: docker
      crictl_version: 1.15.0
      runc_version: 1.0.0-rc8
    cni:
      source: https://github.com/containernetworking/plugins/releases/download/v0.8.6/cni-plugins-linux-amd64-v0.8.7.tgz
      source_hash: 977824932d5667c7a37aa6a3cbba40100a6873e7bd97e83e8be837e3e7afd0a8
      network: 10.244.0.0/16
      provider: calico
      calico:
        ipv4:
          autodetection_method: interface=en.*
        ipv6:
          enable: false
          autodetection_method: interface=en.*
      flannel:
        interface: ens10
      weave:
        interface: ens10
      cilium:
        interface: ens10
    addons:
      dns:
        enabled: True
        domain: cluster.local
        server: 10.96.0.10
        autoscaler:
          enabled: True
        coredns:
          enabled: True
      helm:
        enabled: true
      kube_prometheus:
        enabled: True
        prometheus_ingress_host: prometheus
        alertmanager_ingress_host: alertmanager
        grafana_ingress_host: grafana
      heapster_influxdb:
        enabled: False
      metrics_server:
        enabled: true
      dashboard:
        enabled: True
        ingress_host: kubernetes-dashboard
      traefik:
        enabled: False
        password: '$$apr1$$u7.rXtVi$$DQtLfP6lJJZqvENhyo6EX1'
        acme_email: user@example.com
      node_problem_detector:
        enabled: True
      contour:
        enabled: true
      nginx:
        enabled: false
      istio:
        enabled: True
      cert_manager:
        enabled: True
        acme_email: user@example.com
        dns:
          enabled: False
          provider: cloudflare
          cloudflare:
            email: admin@example.com
            secret: 012345abcde012345abcde012345abcde012345abcde
      fluentd_elasticsearch:
        enabled: True
      weave_scope:
        enabled: True
        ingress_host: scope
      kubeless:
        enabled: True
        ui_version: master
        ingress_host: kubeless
        nats_trigger_image: docker.io/kubeless/nats-trigger-controller:v1.0.0
        nats_url: nats://nats-cluster.nats-io:4222
        kafka_trigger_image: docker.io/kubeless/kafka-trigger-controller:v1.0.2
        kafka_image: docker.io/bitnami/kafka:1.1.0-r0
        kinesis_trigger_image: docker.io/kubeless/kinesis-trigger-controller:v1.0.0
        zookeeper_image: docker.io/bitnami/zookeeper:3.4.10-r12
      nats_operator:
        enabled: True
      knative:
        enabled: False
        version: 0.1.1
      httpbin:
        enabled: True
        ingress_host: httpbin
      metallb:
        enabled: True
      descheduler:
        enabled: True
      kube_scan:
        enabled: True
      rook_cockroachdb:
        enabled: False
      rook_yugabytedb:
        enabled: False
  storage:
    loopback_iscsi:
      enabled: True
      initiator_address: 127.0.0.1
      initiator_port: 53260
      files:
        - name: disk-000.img
          size: 8GB
          lun_name: ceph0
        - name: disk-001.img
          size: 8GB
          lun_name: ceph1      
        - name: disk-002.img
          size: 8GB
          lun_name: ceph2
    minio_operator:
      enabled: True
      ingress_host: minio
    rook_ceph:
      enabled: True
      ingress_host: ceph
      default_storageclass:
        enabled: True
        name: rook-ceph-block
    rook_edgefs:
      enabled: False
      ingress_host: edgefs
      default_storageclass:
        enabled: False
        name: edgefs-iscsi-csi-storageclass
    longhorn:
      enabled: false
      ingress_host: longhorn
      default_storageclass:
        enabled: false
        name: longhorn
    openebs:
      enabled: False
      default_storageclass:
        enabled: True
        name: openebs-sc-statefulset
    mayastor:
      enabled: False
      default_storageclass:
        enabled: True
        name: mayastor-iscsi
    portworx:
      enabled: False
      manifest_url: <url>
      dataplane_interface: eth0
      management_interface: eth0
      default_storageclass:
        enabled: True
        name: px-dedicated-sc
  charts:
    argo:
      enabled: true
    argo_cd:
      enabled: true
    argo_events:
      enabled: true
    kubeapps:
      enabled: true
    concourse:
      enabled: true
      username: concourse
      password: C0nC0urs3
      db_password: V3ry1ns3sur3P4ssw0rd
      db_size: 8Gi
      version: 5.7.1
      source_hash: ca942b23bb09c434fcdfd7358a7997972ff6c1f5
      ingress_host: concourse
      oauth:
        provider: keycloak
        keycloak:
          realm: default
      s3:
        accesskey: concourse
        secretkey: C0nc0ur53P4ssw0rd
        bucket: concourse
    keycloak:
      enabled: True
      password: V3ry1ns3sur3P4ssw0rd
      db_size: 8Gi
      ingress_host: keycloak
    mailhog:
      enabled: True
      ingress_host: mailhog
    spinnaker:
      enabled: True
      ingress_host: spinnaker
      github:
        enabled: True
        token: 0123456789abcdefghij0123456789abcdefghij
      s3:
        accesskey: spinnaker
        secretkey: Sp1nn4k3rS3cr3tK3y
        bucket: spinnaker
      oauth:
        provider: keycloak
        keycloak:
          realm: default
      concourse:
        username: spinnaker
        password: 1nt3gr4t1on
    harbor:
      enabled: true
      admin_password: Ch4ng3M3
      secretkey: 2Ds7hlY9VHyKAcNd
      database_password: Ch4ng3M34ls0
      coreIngressHost: harbor
      notaryIngressHost: notary
      s3:
        accesskey: harbor
        secretkey: Ch4ng3M34ls0
        bucket: harbor
      oauth:
        provider: keycloak
        keycloak:
          realm: default
    vistio:
      enabled: true
      ingress_host: vistio
    ethereum:
      enabled: true
      version: 1.8.19
      address: "0xDd7bC23204b6f4529D91ba79c185984ADcf12CbD"
      private_key: "92c69eb5fdae8af5ed2cffbf9eb5e40d30aa646db354338f7b7841038aa61c9e"
      secret: "some_random_secret"
      ingress_host: etherum
    keycloak_gatekeeper:
      enabled: true
      version: "master"
      realm: "default"
      groups:
        - "kubernetes-admins,cluster-admin"
        - "kubernetes-users,view"
    proxyinjector:
      enabled: True
      ingress_host: demo
      oauth:
        provider: keycloak
        keycloak:
          realm: default
    openfaas:
      enabled: false
      ingress_host: openfaas
      username: admin
      password: V3ry1ns3cur3
    falco:
      enabled: False
    fission:
      enabled: False
    nuclio:
      enabled: False
      ingress_host: nuclio
    velero:
      enabled: False
    jenkins: False
