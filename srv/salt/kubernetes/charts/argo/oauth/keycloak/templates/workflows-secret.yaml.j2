# -*- coding: utf-8 -*-
# vim: ft=jinja

{% from tpldir ~ "/map.jinja" import argo with context %}
{%- from "kubernetes/map.jinja" import charts with context -%}
{%- set keycloak_url = 'https://' ~ charts.keycloak.ingress.host ~ '.' ~ pillar['public-domain'] -%}
{%- set keycloak_username = salt['cmd.shell']('kubectl -n keycloak get configmap keycloak-env-vars --output=jsonpath="{.data.KEYCLOAK_ADMIN}"') %}
{%- set keycloak_password = salt['cmd.shell']('kubectl -n keycloak get secret keycloak --output=jsonpath="{.data.admin-password}" | base64 -d') %}
{%- set client_id         = argo.workflows.oauth.keycloak.client_id %}
{%- set client_secret     = salt['cmd.shell']('/srv/keycloak/scripts/kc-clientsecret.sh' + ' ' + keycloak_username + ' ' + keycloak_password + ' ' + keycloak_url + ' ' + argo.workflows.oauth.keycloak.realm + ' ' + client_id) -%}

---
apiVersion: v1
kind: Namespace
metadata:
  name: argo-workflows
---
apiVersion: v1
kind: Secret
metadata:
  name: argo-workflows-server-oauth2
  namespace: argo-workflows
  labels:
    app: argo-workflows
    component: server
type: Opaque
data:
  client-id: {{ client_id | base64_encode }}
  client-secret: {{ client_secret | base64_encode }}
