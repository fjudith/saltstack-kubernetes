# -*- coding: utf-8 -*-
# vim: ft=jinja

{% from tpldir ~ "/map.jinja" import kube_prometheus with context %}
{%- set public_domain = pillar['public-domain'] -%}
{%- from "kubernetes/map.jinja" import storage with context -%}
{%- from "kubernetes/map.jinja" import charts with context -%}
{%- from "kubernetes/map.jinja" import common with context -%}
{%- if common.addons.get('nginx', {'enabled': False}).enabled  %}
  {%- set controller = "nginx" -%}
{%- elif common.addons.get('traefik', {'enabled': False}).enabled %}
  {%- set controller = "traefik" -%}
{%- elif common.addons.get('istio', {'enabled': False}).enabled %}
  {%- set controller = "istio" -%}
{%- elif common.addons.get('contour', {'enabled': False}).enabled %}
  {%- set controller = "contour" -%}
{%- endif -%}
{%- set public_domain = pillar['public-domain'] -%}

image:
  tag: ${{ kube_prometheus.version }}

alertmanager:
  ingress:
    enabled: {{ kube_prometheus.ingress.alertmanager.enabled }}
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      kubernetes.io/tls-acme: "true"
    ingressClassName: {{ controller }}
    hosts:
      - {{ kube_prometheus.ingress.alertmanager.host }}.{{ public_domain }}
    tls:
    - secretName: alertmanager-general-tls
      hosts:
        - {{ kube_prometheus.ingress.alertmanager.host }}.{{ public_domain }}


prometheus:
  ingress:
    enabled: {{ kube_prometheus.ingress.prometheus.enabled }}
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      kubernetes.io/tls-acme: "true"
    ingressClassName: {{ controller }}
    hosts:
      - {{ kube_prometheus.ingress.prometheus.host }}.{{ public_domain }}
    tls:
    - secretName: prometheus-general-cert
      hosts:
        - {{ kube_prometheus.ingress.prometheus.host }}.{{ public_domain }}

grafana:
  ingress:
    enabled: {{ kube_prometheus.ingress.grafana.enabled }}
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      kubernetes.io/tls-acme: "true"
    ingressClassName: {{ controller }}
    hosts:
     -  {{ kube_prometheus.ingress.grafana.host }}.{{ public_domain }}
    tls:
    - secretName: grafana-general-cert
      hosts:
        -  {{ kube_prometheus.ingress.grafana.host }}.{{ public_domain }}

  extraConfigmapMounts:
    {%- if storage.get('rook_ceph', {'enabled': False}).enabled %}
    - name: grafana-dashboard-rook-ceph
      mountPath: /grafana-dashboard-definitions/0/rook-ceph
      configMap: grafana-dashboard-rook-ceph
      readOnly: true
    {%- endif %}
    {%- if storage.get('portworx', {'enabled': False}).enabled %}
    - name: grafana-dashboard-portworx
      mountPath: /grafana-dashboard-definitions/0/portworx
      configMap: grafana-dashboard-portworx
      readOnly: true
    {%- endif %}
    {%- if common.addons.get('traefik', {'enabled': False}).enabled %}
    - name: grafana-dashboard-traefik
      mountPath: /grafana-dashboard-definitions/0/traefik
      configMap: grafana-dashboard-traefik
      readOnly: true
    {%- endif %}
    {%- if common.addons.get('nginx', {'enabled': False}).enabled %}
    - name: grafana-dashboard-nginx
      mountPath: /grafana-dashboard-definitions/0/nginx
      configMap: grafana-dashboard-nginx
      readOnly: true
    {%- endif %}
    {%- if common.addons.get('nats_operator', {'enabled': False}).enabled %}
    - name: grafana-dashboard-nats
      mountPath: /grafana-dashboard-definitions/0/nats
      configMap: grafana-dashboard-nats
      readOnly: true
    {%- endif %}
    {%- if common.addons.get('cert_manager', {'enabled': False}).enabled %}
    - name: grafana-dashboard-cert
      mountPath: /grafana-dashboard-definitions/0/cert
      configMap: grafana-dashboard-cert
      readOnly: true
    {%- endif %}
    {%- if charts.get('openfaas', {'enabled': False}).enabled %}
    - name: grafana-dashboard-openfaas
      mountPath: /grafana-dashboard-definitions/0/openfaas
      configMap: grafana-dashboard-openfaas
      readOnly: true
    {%- endif %}
    {%- if charts.get('falco', {'enabled': False}).enabled %}
    - name: grafana-dashboard-falco
      mountPath: /grafana-dashboard-definitions/0/falco
      configMap: grafana-dashboard-falco
      readOnly: true
    {%- endif %}
    {%- if common.addons.get('rook_cockroachdb', {'enabled': False}).enabled %}
    - name: grafana-dashboard-cockroachdb
      mountPath: /grafana-dashboard-definitions/0/cockroachdb
      configMap: grafana-dashboard-cockroachdb
      readOnly: true
    {%- endif %}
