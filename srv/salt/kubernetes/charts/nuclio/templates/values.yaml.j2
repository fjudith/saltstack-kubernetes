# -*- coding: utf-8 -*-
# vim: ft=jinja

{#- Get the `tplroot` from `tpldir` #}
{% from tpldir ~ "/map.jinja" import nuclio with context %}
{%- from "kubernetes/map.jinja" import charts with context -%}
{%- from "kubernetes/map.jinja" import common with context -%}
{%- set public_domain = pillar['public-domain'] -%}
{% set cri_provider = salt['pillar.get']('kubernetes:common:cri:provider') %}

# if true, all components assume no internet connectivity
offline: false

# Controller settings
controller:
  enabled: true
  image:
    tag: {{ nuclio.version }}-amd64
  operator:
    function:
      numWorkers: {{ nuclio.function_worker }}
    functionEvent:
      numWorkers: {{ nuclio.event_worker }}
    project:
      numWorkers: {{ nuclio.project_worker }}

dahsboard:
  enabled: True
  image:
    tag: {{ nuclio.version }}-amd64
  
  {%- if not cri_provider == 'docker'  %}
  containerBuilderKind: "kanico"
  {%- endif %}

autoscaler:
  enabled: False
  image:
    tag: {{ nuclio.version }}-amd64

dlx:
  enabled: False
  image:
    tag: {{ nuclio.version }}-amd64

registry:
  {%- if charts.get('harbor', {'enabled': False}).enabled %}
  secretName: registry-harbor-local
  pushPullUrl: {{ charts.harbor.coreIngressHost }}.{{ public_domain }}/library
  {%- elif nuclio.registry.get('dockerhub', {'enabled': False}).enabled %}
  secretName: registry-dockerhub
  pushPullUrl: {{ nuclio.registry.dockerhub.url }}/{{ nuclio.registry.dockerhub.organization }}
  {%- elif nuclio.registry.get('quay', {'enabled': False}).enabled %}
  secretName: registry-quay
  pushPullUrl: {{ nuclio.registry.quay.url }}/{{ nuclio.registry.quay.organization }}
  {%- elif nuclio.registry.get('quay', {'enabled': False}).enabled %}
  secretName: registry-harbor
  pushPullUrl: {{ nuclio.registry.harbor.url }}/{{ nuclio.registry.harbor.project }}
  {%- endif %}

platform:
  logger:
    sinks:
      humanReadableStdout:
        kind: stdout
        format: humanReadable
    system:
    - level: debug
      sink: humanReadableStdout
    functions:
    - level: debug
      sink: humanReadableStdout
  {%- if common.addons.get('kube_prometheus', {'enabled': False}).enabled %}
  metrics:
    sinks:
      pushSink:
        kind: prometheusPush
        url: http://prometheus-pushgateway.monitoring:9091
        attributes:
          jobName: nuclio-push-job
          instanceName: nuclio-push-instance
          interval: 10s
      pullSink:
        kind: prometheusPull
        url: :8090
        attributes:
          jobName: nuclio-pull-job
          instanceName: nuclio-pull-instance
    system:
    - pullSink
    functions:
    - pushSink
  {%- endif %}