#cloud-config
# https://cloudinit.readthedocs.io/en/latest/topics/examples.html
groups:
  - ubuntu: [root,sys]
  - cloud-users

users:
  - default
  - name: cloud
    gecos: Magic Cloud User
    homedir: /home/cloud
    primary_group: cloud-users
    lock_passwd: True
    inactive: False
    sudo: ALL=(ALL) NOPASSWD:ALL
    ssh_authorized_keys:
      - key1
  - name: sysops
    gecos: Sysops user
    # groups: salt
    lock_passwd: True
    # openssl passwd -6 <text>
    passwd: $6$eg0uRnaXLSYHz9zk$XZ.oMymbfAZmAe0QQIZnDqviC0Qg.Bs3z9SkQOomTyrF.8y0W08b3xiG66xxRfw2KyeoiLE7gtRJa2kkfOIgj.
    shell: /bin/bash

# package_upgrade: true

apt:
  sources:
    saltstack.list:
      source: "deb https://repo.saltproject.io/py3/ubuntu/20.04/amd64/archive/3004 focal main"
      key: |
        -----BEGIN PGP PUBLIC KEY BLOCK-----
        Version: GnuPG v2

        mQENBFOpvpgBCADkP656H41i8fpplEEB8IeLhugyC2rTEwwSclb8tQNYtUiGdna9
        m38kb0OS2DDrEdtdQb2hWCnswxaAkUunb2qq18vd3dBvlnI+C4/xu5ksZZkRj+fW
        tArNR18V+2jkwcG26m8AxIrT+m4M6/bgnSfHTBtT5adNfVcTHqiT1JtCbQcXmwVw
        WbqS6v/LhcsBE//SHne4uBCK/GHxZHhQ5jz5h+3vWeV4gvxS3Xu6v1IlIpLDwUts
        kT1DumfynYnnZmWTGc6SYyIFXTPJLtnoWDb9OBdWgZxXfHEcBsKGha+bXO+m2tHA
        gNneN9i5f8oNxo5njrL8jkCckOpNpng18BKXABEBAAG0MlNhbHRTdGFjayBQYWNr
        YWdpbmcgVGVhbSA8cGFja2FnaW5nQHNhbHRzdGFjay5jb20+iQE4BBMBAgAiBQJT
        qb6YAhsDBgsJCAcDAgYVCAIJCgsEFgIDAQIeAQIXgAAKCRAOCKFJ3le/vhkqB/0Q
        WzELZf4d87WApzolLG+zpsJKtt/ueXL1W1KA7JILhXB1uyvVORt8uA9FjmE083o1
        yE66wCya7V8hjNn2lkLXboOUd1UTErlRg1GYbIt++VPscTxHxwpjDGxDB1/fiX2o
        nK5SEpuj4IeIPJVE/uLNAwZyfX8DArLVJ5h8lknwiHlQLGlnOu9ulEAejwAKt9CU
        4oYTszYM4xrbtjB/fR+mPnYh2fBoQO4d/NQiejIEyd9IEEMd/03AJQBuMux62tjA
        /NwvQ9eqNgLw9NisFNHRWtP4jhAOsshv1WW+zPzu3ozoO+lLHixUIz7fqRk38q8Q
        9oNR31KvrkSNrFbA3D89uQENBFOpvpgBCADJ79iH10AfAfpTBEQwa6vzUI3Eltqb
        9aZ0xbZV8V/8pnuU7rqM7Z+nJgldibFk4gFG2bHCG1C5aEH/FmcOMvTKDhJSFQUx
        uhgxttMArXm2c22OSy1hpsnVG68G32Nag/QFEJ++3hNnbyGZpHnPiYgej3FrerQJ
        zv456wIsxRDMvJ1NZQB3twoCqwapC6FJE2hukSdWB5yCYpWlZJXBKzlYz/gwD/Fr
        GL578WrLhKw3UvnJmlpqQaDKwmV2s7MsoZogC6wkHE92kGPG2GmoRD3ALjmCvN1E
        PsIsQGnwpcXsRpYVCoW7e2nW4wUf7IkFZ94yOCmUq6WreWI4NggRcFC5ABEBAAGJ
        AR8EGAECAAkFAlOpvpgCGwwACgkQDgihSd5Xv74/NggA08kEdBkiWWwJZUZEy7cK
        WWcgjnRuOHd4rPeT+vQbOWGu6x4bxuVf9aTiYkf7ZjVF2lPn97EXOEGFWPZeZbH4
        vdRFH9jMtP+rrLt6+3c9j0M8SIJYwBL1+CNpEC/BuHj/Ra/cmnG5ZNhYebm76h5f
        T9iPW9fFww36FzFka4VPlvA4oB7ebBtquFg3sdQNU/MmTVV4jPFWXxh4oRDDR+8N
        1bcPnbB11b5ary99F/mqr7RgQ+YFF0uKRE3SKa7a+6cIuHEZ7Za+zhPaQlzAOZlx
        fuBmScum8uQTrEF5+Um5zkwC7EXTdH1co/+/V/fpOtxIg4XO4kcugZefVm5ERfVS
        MA==
        =dtMN
        -----END PGP PUBLIC KEY BLOCK-----

packages:
  - apt-transport-https
  - conntrack
  - ca-certificates
  - ufw
  - git
  - wireguard
  # Saltstack
  - lsb-release
  - debconf-utils
  - dmidecode
  - python3-augeas
  - python3-boto
  - python3-boto3
  - python3-botocore
  - python3-cherrypy3
  - python3-croniter
  - python3-git
  - python3-pip
  - python3-setuptools
  - python3-netaddr
  - python3-pyinotify
  - python3-ws4py
  - python3-m2crypto
  - salt-minion
  - salt-ssh
  - reclass
  - curl
  - net-tools
  - gnupg2

write_files:
  - path: /etc/salt/grains
    content: |
      role: master
  - path: /etc/ufw/applications.d/master.ufw
    content: |
      # Install into /etc/ufw/applications.d/ and run 'ufw app update'

      # https://docs.saltstack.com/en/latest/topics/tutorials/firewall.html
      [salt]
      title=salt
      description=fast and powerful configuration management and remote execution
      ports=4505,4506/tcp

      # https://kubernetes.io/docs/setup/independent/install-kubeadm/
      [kube-apiserver]
      title=kube-apiserver
      description=Kubernetes API Server
      ports=6443/tcp

      [etcd]
      title=Etcd server port
      description=Etcd client request
      ports=2379/tcp

      [etcd-peer]
      title=Etcd cluster
      description=Etcd cluster peering
      ports=2380/tcp

      # https://docs.projectcalico.org/getting-started/kubernetes/requirements
      [calico-bgp]
      title=calico
      description=Cloud native connectivity and network policy
      ports=179/tcp

      [calico-typha-agent]
      title=calico typha
      description="Calico's datastore fan-out daemon"
      ports=5479/tcp

      # https://docs.cilium.io/en/stable/install/system_requirements/
      [cilium-vxlan]
      title=Cilium VXLAN
      description=Cillium VXLAN overlay mode 
      ports=8472/udp

      [cilium-geneve]
      title=Cilium Geneve
      description=Cillium Geneve overlay mode 
      ports=6081/udp

      [cilium-health]
      title=Cilium health
      description=Cillium monitoring
      ports=4240/tcp

      # https://github.com/coreos/flannel/blob/master/Documentation/backends.md
      [flannel-vxlan]
      title=flannel
      description=Flannel is a network fabric for containers, designed for Kubernetes
      ports=8472,4789/udp

      # https://www.weave.works/docs/net/latest/faq/
      [weave]
      title=weave
      description=Weave Net communications
      ports=6783/tcp|6783,6784/udp

      [weave-metrics]
      title=weave-metrics
      description=Weave Net monitoring
      ports=6781,6782/tcp

bootcmd:
  # Network tuning
  - [cloud-init-per, once, modprobe_ip_conntrack, sh, -c, "modprobe ip_conntrack"]
  - [cloud-init-per, once, increase_local_port_range, sh, -c, "echo '1024 65535' | tee -a /proc/sys/net/ipv4/ip_local_port_range"]
  - [cloud-init-per, once, modprobe_br_netfilter, sh, -c, "modprobe br_netfilter"]
  - [cloud-init-per, once, enable_ipv4_forwarding, sh, -c, "echo 'net.ipv4.ip_forward=1' | tee -a /etc/sysctl.conf"]
  - [cloud-init-per, once, enable_ipv6_forwarding, sh, -c, "echo 'net.ipv6.conf.all.forwarding=1' | tee -a /etc/sysctl.conf"]
  - [cloud-init-per, once, pass_bridged_arp_traffic_to_arptables, sh, -c, "echo 'net.bridge.bridge-nf-call-arptables=1' | tee -a /etc/sysctl.conf"]
  - [cloud-init-per, once, pass_bridged_ipv4_traffic_to_iptables, sh, -c, "echo 'net.bridge.bridge-nf-call-ip6tables=1' | tee -a /etc/sysctl.conf"]
  - [cloud-init-per, once, pass_bridged_ipv6_traffic_to_ip6tables, sh, -c, "echo 'net.bridge.bridge-nf-call-iptables=1' | tee -a /etc/sysctl.conf"]
  - [cloud-init-per, once, block_bridged_pppoe-tagged_arp-ip_traffic_to_arptables-iptables, sh, -c, "echo 'net.bridge.bridge-nf-filter-pppoe-tagged=0' | tee -a /etc/sysctl.conf"]
  - [cloud-init-per, once, block_bridged_vlan-tagged_arp-ip_traffic_to_arptables-iptables, sh, -c, "echo 'net.bridge.bridge-nf-filter-vlan-tagged=0' | tee -a /etc/sysctl.conf"]
  - [cloud-init-per, once, disable_vlan_interface_lookup, sh, -c, "echo 'net.bridge.bridge-nf-pass-vlan-input-dev=0' | tee -a /etc/sysctl.conf"]
  - [cloud-init-per, once, increase_max_file-handles, sh, -c, "echo 'fs.file-max=2097152' | tee -a /etc/sysctl.conf"]
  - [cloud-init-per, once, increase_max_open_file_per_process, sh, -c, "echo 'fs.nr_open=1048576' | tee -a /etc/sysctl.conf"]
  - [cloud-init-per, once, enable_reuse_time-wait_sockets, sh, -c, "echo 'net.ipv4.tcp_tw_reuse=1' | tee -a /etc/sysctl.conf"]
  - [cloud-init-per, once, increase_connection_tracking_table_size, sh, -c, "echo 'net.netfilter.nf_conntrack_max=1048576' | tee -a /etc/sysctl.conf"]
  - [cloud-init-per, once, limit_socket_listen_backlog, sh, -c, "echo 'net.core.somaxconn=1048576' | tee -a /etc/sysctl.conf"]
  # - sysctl -p
  # OpenFile limits
  - [cloud-init-per, once, increase_max_open_file_soft, sh, -c, "echo '*    soft nofile 1048576' | tee -a /etc/security/limits.conf"]
  - [cloud-init-per, once, increase_max_open_file_hard, sh, -c, "echo '*    hard nofile 1048576' | tee -a /etc/security/limits.conf"]
  - [cloud-init-per, once, increase_max_open_file_soft_root, sh, -c, "echo 'root soft nofile 1048576' | tee -a /etc/security/limits.conf"]
  - [cloud-init-per, once, increase_max_open_file_hard_root, sh, -c, "echo 'root hard nofile 1048576' | tee -a /etc/security/limits.conf"]
  - [cloud-init-per, once, enable_pam_session_limits, sh, -c, "echo 'session required pam_limits.so' | tee -a  /etc/pam.d/common-session"]
  # SSH tuning
  - [cloud-init-per, once, increase_ssh_sessions, sh, -c, "echo 'MaxSessions 100' | tee -a  /etc/ssh/sshd_config"]

salt_minion:
  pkg_name: 'salt-minion'
  service_name: 'salt-minion'
  config_dir: '/etc/salt'
  conf:
    master: ${SALT_MASTER_HOST}
    use_superseded:
      - module.run
    mine_functions:
      test.ping: []
      network.ip_addrs:
        interface: wg0
      network.get_hostname: []
    mine_interval: 5
  grains:
    role:
       - master

runcmd:
  # Reload SSHd
  - [systemctl, reload, sshd]
  # Enable UFW
  - [/usr/sbin/ufw, default, allow, FORWARD]
  - [/usr/sbin/ufw, allow, in, 'on', ${VPN_INTERFACE}]
  - [/usr/sbin/ufw, allow, in, 'on', ${PRIVATE_INTERFACE}, to, any, port, ${VPN_PORT}]
  - [/usr/sbin/ufw, allow, ssh]
  - [/usr/sbin/ufw, allow, flannel-vxlan]
  - [/usr/sbin/ufw, allow, calico-bgp]
  - [/usr/sbin/ufw, allow, weave]
  - [/usr/sbin/ufw, allow, cilium-vxlan]
  - [/usr/sbin/ufw, allow, cilium-geneve]
  - [/usr/sbin/ufw, --force, enable]
  # Kernel headers
  # - [/usr/bin/apt, install, linux-headers-$(uname -r)]