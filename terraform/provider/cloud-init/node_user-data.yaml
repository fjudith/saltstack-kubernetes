#cloud-config
# https://cloudinit.readthedocs.io/en/latest/topics/examples.html
groups:
  - ubuntu: [root,sys]
  - cloud-users

users:
  - default
  - name: cloud
    gecos: Magic Cloud User
    homedir: /home/cloud
    primary_group: cloud-users
    lock_passwd: True
    inactive: False
    sudo: ALL=(ALL) NOPASSWD:ALL
    ssh_authorized_keys:
      - key1
  - name: sysops
    gecos: Sysops user
    # groups: salt
    lock_passwd: True
    # openssl passwd -6 <text>
    passwd: $6$eg0uRnaXLSYHz9zk$XZ.oMymbfAZmAe0QQIZnDqviC0Qg.Bs3z9SkQOomTyrF.8y0W08b3xiG66xxRfw2KyeoiLE7gtRJa2kkfOIgj.
    shell: /bin/bash

apt:
  sources:
    saltstack.list:
      source: "deb https://repo.saltproject.io/py3/ubuntu/22.04/amd64/archive/3006 jammy main"
      key: |
        -----BEGIN PGP PUBLIC KEY BLOCK-----

        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
        =ZKPF
        -----END PGP PUBLIC KEY BLOCK-----

# package_upgrade: true
packages:
  - apt-transport-https
  - conntrack
  - ca-certificates
  - ufw
  - git
  - wireguard
  # Saltstack
  - lsb-release
  - debconf-utils
  - dmidecode
  - python3-augeas
  - python3-boto
  - python3-boto3
  - python3-botocore
  - python3-cherrypy3
  - python3-croniter
  - python3-git
  - python3-pip
  - python3-setuptools
  - python3-netaddr
  - python3-pyinotify
  - python3-ws4py
  - python3-m2crypto
  - salt-minion
  - salt-ssh
  - reclass
  - curl
  - net-tools
  - gnupg2

write_files:
  - path: /etc/salt/grains
    content: |
      role: node
  - path: /etc/ufw/applications.d/node.ufw
    content: |
      # Install into /etc/ufw/applications.d/ and run 'ufw app update'

      # https://docs.saltstack.com/en/latest/topics/tutorials/firewall.html
      [salt]
      title=salt
      description=fast and powerful configuration management and remote execution
      ports=4505,4506/tcp

      # https://docs.projectcalico.org/getting-started/kubernetes/requirements
      [calico-bgp]
      title=calico
      description=Cloud native connectivity and network policy
      ports=179/tcp

      [calico-typha-agent]
      title=calico typha
      description="Calico's datastore fan-out daemon"
      ports=5479/tcp

      # https://docs.cilium.io/en/stable/install/system_requirements/
      [cilium-vxlan]
      title=Cilium VXLAN
      description=Cillium VXLAN overlay mode 
      ports=8472/udp

      [cilium-geneve]
      title=Cilium Geneve
      description=Cillium Geneve overlay mode 
      ports=6081/udp

      [cilium-health]
      title=Cilium health
      description=Cillium monitoring
      ports=4240/tcp

      # https://github.com/coreos/flannel/blob/master/Documentation/backends.md
      [flannel-vxlan]
      title=flannel
      description=Flannel is a network fabric for containers, designed for Kubernetes
      ports=8472,4789/udp

      # https://www.weave.works/docs/net/latest/faq/
      [weave]
      title=weave
      description=Weave Net communications
      ports=6783/tcp|6783,6784/udp

      [weave-metrics]
      title=weave-metrics
      description=Weave Net monitoring
      ports=6781,6782/tcp

      # https://docs.portworx.com/start-here-installation
      [portworx]
      title=portworx
      description=Portworx Service
      ports=9001:9022/tcp|9002/udp

      [portworx-kvdb]
      title=portworx-kvdb
      description=Portworx ETCd
      ports=2379,2380/tcp

      # ISCSI
      [iscsi-tcp]
      title=iscsi-tcp
      description=ISCSI target TCP
      ports=3260/tcp

      [iscsi-udp]
      title=iscsi-udp
      description=ISCSI UDP
      ports=3260/udp

      # NFS
      [nfs-tcp]
      title=nfs-tcp
      description=NFS server TCP ports
      ports=111,2049,20048,20049/tcp

      [nfs-udp]
      title=nfs-udp
      description=NFS server UDP ports
      ports=111,2049,20048,20049/udp

bootcmd:
  # Network tuning
  - [cloud-init-per, once, modprobe_ip_conntrack, sh, -c, "modprobe ip_conntrack"]
  - [cloud-init-per, once, increase_local_port_range, sh, -c, "echo '1024 65535' | tee -a /proc/sys/net/ipv4/ip_local_port_range"]
  - [cloud-init-per, once, modprobe_br_netfilter, sh, -c, "modprobe br_netfilter"]
  - [cloud-init-per, once, enable_ipv4_forwarding, sh, -c, "echo 'net.ipv4.ip_forward=1' | tee -a /etc/sysctl.conf"]
  - [cloud-init-per, once, enable_ipv6_forwarding, sh, -c, "echo 'net.ipv6.conf.all.forwarding=1' | tee -a /etc/sysctl.conf"]
  - [cloud-init-per, once, pass_bridged_arp_traffic_to_arptables, sh, -c, "echo 'net.bridge.bridge-nf-call-arptables=1' | tee -a /etc/sysctl.conf"]
  - [cloud-init-per, once, pass_bridged_ipv4_traffic_to_iptables, sh, -c, "echo 'net.bridge.bridge-nf-call-ip6tables=1' | tee -a /etc/sysctl.conf"]
  - [cloud-init-per, once, pass_bridged_ipv6_traffic_to_ip6tables, sh, -c, "echo 'net.bridge.bridge-nf-call-iptables=1' | tee -a /etc/sysctl.conf"]
  - [cloud-init-per, once, block_bridged_pppoe-tagged_arp-ip_traffic_to_arptables-iptables, sh, -c, "echo 'net.bridge.bridge-nf-filter-pppoe-tagged=0' | tee -a /etc/sysctl.conf"]
  - [cloud-init-per, once, block_bridged_vlan-tagged_arp-ip_traffic_to_arptables-iptables, sh, -c, "echo 'net.bridge.bridge-nf-filter-vlan-tagged=0' | tee -a /etc/sysctl.conf"]
  - [cloud-init-per, once, disable_vlan_interface_lookup, sh, -c, "echo 'net.bridge.bridge-nf-pass-vlan-input-dev=0' | tee -a /etc/sysctl.conf"]
  - [cloud-init-per, once, increase_max_file-handles, sh, -c, "echo 'fs.file-max=2097152' | tee -a /etc/sysctl.conf"]
  - [cloud-init-per, once, increase_max_open_file_per_process, sh, -c, "echo 'fs.nr_open=1048576' | tee -a /etc/sysctl.conf"]
  - [cloud-init-per, once, enable_reuse_time-wait_sockets, sh, -c, "echo 'net.ipv4.tcp_tw_reuse=1' | tee -a /etc/sysctl.conf"]
  - [cloud-init-per, once, increase_connection_tracking_table_size, sh, -c, "echo 'net.netfilter.nf_conntrack_max=1048576' | tee -a /etc/sysctl.conf"]
  - [cloud-init-per, once, limit_socket_listen_backlog, sh, -c, "echo 'net.core.somaxconn=1048576' | tee -a /etc/sysctl.conf"]
  # - sysctl -p
  # OpenFile limits
  - [cloud-init-per, once, increase_max_open_file_soft, sh, -c, "echo '*    soft nofile 1048576' | tee -a /etc/security/limits.conf"]
  - [cloud-init-per, once, increase_max_open_file_hard, sh, -c, "echo '*    hard nofile 1048576' | tee -a /etc/security/limits.conf"]
  - [cloud-init-per, once, increase_max_open_file_soft_root, sh, -c, "echo 'root soft nofile 1048576' | tee -a /etc/security/limits.conf"]
  - [cloud-init-per, once, increase_max_open_file_hard_root, sh, -c, "echo 'root hard nofile 1048576' | tee -a /etc/security/limits.conf"]
  - [cloud-init-per, once, enable_pam_session_limits, sh, -c, "echo 'session required pam_limits.so' | tee -a  /etc/pam.d/common-session"]
  # SSH tuning
  - [cloud-init-per, once, increase_ssh_sessions, sh, -c, "echo 'MaxSessions 100' | tee -a  /etc/ssh/sshd_config"]

salt_minion:
  pkg_name: 'salt-minion'
  service_name: 'salt-minion'
  config_dir: '/etc/salt'
  conf:
    master: ${SALT_MASTER_HOST}
    use_superseded:
      - module.run
    mine_functions:
      test.ping: []
      network.ip_addrs:
        interface: wg0
      network.get_hostname: []
    mine_interval: 5
  grains:
    role:
       - node

runcmd:
  # Reload SSHd
  - [systemctl, reload, sshd]
  # Enable UFW
  - [/usr/sbin/ufw, default, allow, FORWARD]
  - [/usr/sbin/ufw, allow, in, 'on', ${VPN_INTERFACE}]
  - [/usr/sbin/ufw, allow, in, 'on', ${PRIVATE_INTERFACE}, to, any, port, ${VPN_PORT}]
  - [/usr/sbin/ufw, allow, ssh]
  - [/usr/sbin/ufw, allow, flannel-vxlan]
  - [/usr/sbin/ufw, allow, calico-bgp]
  - [/usr/sbin/ufw, allow, weave]
  - [/usr/sbin/ufw, allow, cilium-vxlan]
  - [/usr/sbin/ufw, allow, cilium-geneve]
  - [/usr/sbin/ufw, --force, enable]
  # Kernel headers
  # - [/usr/bin/apt, install, linux-headers-$(uname -r)]